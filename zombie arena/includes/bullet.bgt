bullet@[] bullets(0);
class bullet
{
int distance;
int sx, sy;
int x, y;
int facing;
int range;
int damage;
int speed=20;
timer speedtimer;
bullet(int d, int r, int s1, int s2,int fa,int sp)
{
speed=sp;
facing=fa;
sx=s1;
sy=s2;
x=s1;
y=s2;
damage=d;
range=r;
}
}
void bulletloop()
{
for (uint i=0; i<bullets.length(); i++)
{
if (bullets[i].facing==Left and bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bullets[i].speedtimer.restart();
bullets[i].x-=1;
bullets[i].distance+=1;
if (bullets[i].damage>2)
bullets[i].damage-=1;
bulletcheck(i);
}
else if (bullets[i].facing==Right and bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bullets[i].speedtimer.restart();
bullets[i].x+=1;
bullets[i].distance+=1;
if (bullets[i].damage>2)
bullets[i].damage-=1;
bulletcheck(i);
}
else if (bullets[i].facing==Up and bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bullets[i].speedtimer.restart();
bullets[i].y+=1;
bullets[i].distance+=1;
if (bullets[i].damage>2)
bullets[i].damage-=1;
bulletcheck(i);
}
else if (bullets[i].facing==Down and bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bullets[i].speedtimer.restart();
bullets[i].y-=1;
bullets[i].distance+=1;
if (bullets[i].damage>2)
bullets[i].damage-=1;
bulletcheck(i);
}
}
}
void bulletcheck(int b)
{
string surface=get_tile_at(bullets[b].x,bullets[b].y);
if (surface=="" or string_contains(surface,"wall",1)>-1)
{
p.play_2d("weapon"+weapon+"wall.ogg",me.x,me.y,bullets[b].x,bullets[b].y,false);
bullets.remove_at(b);
return;
}
if (bullets[b].distance>=bullets[b].range)
{
bullets.remove_at(b);
return;
}
for (uint i=0; i<zombies.length(); i++)
{
if (zombies[i].x==bullets[b].x and zombies[i].y==bullets[b].y)
{
zombies[i].hp-=bullets[b].damage;
p.play_2d("weapon"+weapon+"hit"+random(1,3)+".ogg",me.x,me.y,zombies[i].x,zombies[i].y,false);
p.play_2d("z"+zombies[i].type+"hit"+random(1,3)+".ogg",me.x,me.y,zombies[i].x,zombies[i].y,false);
if (weaponscatter==false)
{
bullets.remove_at(b);
break;
}
}
}
}
void spawn_bullet(int p1, int p2, int p3, int p4, int p5,int p6)
{
bullet b1(p1,p2,p3,p4,p5,p6);
bullets.insert_last(b1);
bulletcheck(bullets.length()-1);
}